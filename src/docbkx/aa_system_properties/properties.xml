<?xml version="1.0" encoding="UTF-8"?>

<properties
	xmlns="urn:java:systemProperties"
	xmlns:db="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink"
	xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd"
>

<!-- specials -->

<property
  id="vi.debug"
  type="boolean"
  default="false"
  short="Enables the Visual Interface debugging stuff in the client.">
  
  <description>
  <db:para>
  This properties enabled various debugging functionalities of the visual interface modules.
  For example will this switch enable a small icon in the toolbar that allows you to reload
  the file when it was edited in the IDE.
  </db:para>
  </description>
  
</property>


<!-- org.eclipse.scada.core.client.common.cacheAddress -->

<property
	id="org.eclipse.scada.core.client.common.cacheAddress"
    type="boolean"
    default="false"
    short="Allow caching the IP address that was looked up from the hostname"
    >
    <description>
    <db:para>
    If this setting is set to <db:literal>true</db:literal> then the connection will
    keep the IP address it got from looking up the DNS name and re-use it without querying
    the DNS again.
    </db:para>
    <db:para>
    Caching the value might bring a quicker re-connect, since the DNS lookup can be skipped
    for following connects. However is also means that if the IP address of a hostname changes
    the connection is unable to detect the change.
    </db:para>
    <db:para>
    If an IP address is specified for connecting, this setting is irrelevant.
    </db:para>
    </description>
</property>

<!-- org.eclipse.scada.core.client.ngp.disableSharedConnector -->

<property
    id="org.eclipse.scada.core.client.ngp.disableSharedProcessor"
    type="boolean"
    default="false"
    short="Disable the shared use of IO processors"
    >
    <description>
    <db:para>
    Starting with Eclipse NeoSCADA 0.2.0 client connections will also use a shared IO processor to
    reduce the number of system resources by default. Setting this value to <db:literal>true</db:literal>
    will revert to the behavior of Eclipse NeoSCADA 0.1.0 and openSCADA 1.1.0. 
    </db:para>
    </description>
</property>

<!-- org.eclipse.scada.utils -->

<property
    id="org.eclipse.scada.utils.script.ScriptExecutor.disableCompile"
    type="boolean"
    default="false"
    short="Allow disabling the use of compiled scripts"
    />
    
<property
    id="org.eclipse.scada.utils.concurrent.noDefaultLogger"
    type="boolean"
    default="false"
    short="Allow disabling the fallback to a default logger for uncaught exceptions"
    />
    
<property
    id="org.eclipse.scada.defaultStringInterner"
    type="custom"
    default="null"
    short="A default fallback which string interner type to use">
    <description>
    <db:para>
    This value defines the default string interner to use when no specific one is set. The default is unset,
    so the implementation specific default will be used. This property simply allows to override all internal
    defaults at once. 
    </db:para>
    <db:para>
    The possible values are:
    <db:variablelist>
      <db:varlistentry>
        <db:term>weak</db:term>
        <db:listitem>A weak reference interner. It will hold the items as long as they are not garbage collected.</db:listitem>
      </db:varlistentry>
      <db:varlistentry>
        <db:term>strong</db:term>
        <db:listitem>A string reference interner. It will hold the items forever.</db:listitem>
      </db:varlistentry>
      <db:varlistentry>
        <db:term>java</db:term>
        <db:listitem>Will use the java String.intern method.</db:listitem>
      </db:varlistentry>
    </db:variablelist>
    </db:para>
    <db:para>If the value is unknown or undefined then no string interning will take place.</db:para>
    </description>
</property>

<!-- org.eclipsescada.ca.file -->

<property
    id="org.eclipse.scada.ca.file.stringInternerType"
    type="custom"
    default="weak"
    short="The string interner type to use for elements read from the CA"
    >
    <description>
    <db:para>Defines the string interner to use for keys and values read from the CA storage.
    Can be overridden by <db:xref linkend="properties_org.eclipse.scada.defaultStringInterner"/> </db:para>
    </description>
</property>

<!-- org.eclipse.scada.sec -->

<property
	id="org.eclipse.scada.sec.callback.defaultTimeout"
	type="integer"
	default="20000"
	short="The time (in milliseconds) after which the callback will be automatically canceled"/>
	
<property
	id="org.eclipse.scada.sec.callback.XMLSignatureCallback.maxKeepKeyOpenTimeout"
	type="integer"
	default="300000"
	short="The maximum amount of time the user may select for holding the signature key open"
	/>

<property
	id="org.eclipse.scada.vi.details.handler.disableWaitShell"
	type="boolean" 
	short="Disable the &amp;wait shell&amp;"
	default="false">
    </property>

<property
	id="org.eclipse.scada.configuration.world.lib.deployment.wix.commonsDaemon.nativeBin.source"
	type="URI"
	short="A URL to the native launcher binaries of Apache Commons Daemon"
	>
	
	<default>
	<db:para>
	<db:link
		xlink:href="https://www.apache.org/dist/commons/daemon/binaries/windows/commons-daemon-1.0.15-bin-windows.zip">https://www.apache.org/dist/commons/daemon/binaries/windows/commons-daemon-1.0.15-bin-windows.zip
	</db:link>
	</db:para>
	</default>
	
	<description>
	<db:para>
				The URL to the ZIP file that contains the native launcher
				binaries for the windows platform of the Apache Commons Daemon
				project.
	</db:para>
	</description>
	
</property>

</properties>